{
    "contents" : "#######################################\n#RDA from scratch after Legendre (1998)\n#\n#RDA steps on the covariance matrix:\n#\n#    1, Compute multivariate linear regression of the centered data matrix on the\n#    standradized matrix of explinatory variables. This gives the matrix of fitted values.\n#\n#    2, Compute PCA on the matrix of fitted values\n#\n#    3, Compute the two types of site scores\n#\n#    4, Output the results\n\n\n\nRDA <- function(Y,X) {\n                             \n###########################  \n#1. Preperation of the data\n###########################  \n  \n  Y.mat <- as.matrix(Y)\n  Yc <- scale(Y.mat, scale = FALSE)\n  \n  X.mat <- as.matrix(X)\n  Xcr <- scale(X.mat)\n\n##########################################  \n#2. Compute multivariate linear regression  \n##########################################\n\n#Compute B, the matrix of regression coefficients of all response variables Y on the\n#regressors X - after eq. 11.4; B = [X' X]^-1 [X' Y]\n\n#?solve\n#solve(A) = Inverse of A where A is a square matrix.\n  B <- solve(t(Xcr) %*% Xcr) %*% (t(Xcr) %*% Yc)\n\n#Matrix of fitted values - eq. 11.5; Yhat = X * b\n  Yhat <- Xcr %*% B\n\n# Dimensions\n  n <- nrow(Y)\n  p <- ncol(Y)\n  m <- ncol(X)\n\n########################\n#3. PCA on fitted values\n########################\n\n#Covariance matrix - eq. 11.7 S = [1/(n-1)] Yhat' Yhat\n\n  S <- (1/(n-1)) * t(Yhat) %*% Yhat\n  #S <- cov(Yhat)\n\n# Eigenvalue decomposition of covariance matrix of Yhat\n  eigenS <- eigen(S)\n\n#Number of canonical axes\n  ka <- length(which(eigenS$values > 0.0000000001))\n\n#Eigenvalues of canonical axes\n  ev <- eigenS$values[1:ka]\n\n#Total variance of the centered matrix Yc\n  trace <- sum(diag(cov(Yc)))\n\n#Orthonormal eigenvectors (contributions of response variables)\n#\"Matrix u, of size (p * p), contains only min[p,m, n-1] eigenvectors with nonzero\n#eigenvalues\n#The canonical coefficients in the normalized matrix U give the contributions of the\n#variables of to the canonical axes.\"\n\n  U <- eigenS$vectors[,1:ka]\n  row.names(U) <- colnames(Y)\n\n#\"The ordination of objects in the space of the response variables Y can be\n#obtained directly from the centred matrix Y, using the standard equation for principal\n#components (eq. 9.4) and matrix U of the eigenvectors\"\n\n#\"The ordination vectors (columns of F) defined in eq. 11.12 are called the vectors of\n#\"site scores\". They have variances that are close, but not equal to the corresponding\n#eigenvalues.\"\n\n#\"Site\" scores (vegan's 'wa' scores, scaling 1 - eq. 11.12) / Matrix of principal components\n  Fmatrix <- Yc %*% U\n  row.names(F) <- row.names(Y)\n\n#\"Site\" constrains /\"fitted site scores\" (vegan's 'lc' scores, scaling 1 - eq. 11.13)\n  Z <- Yhat %*% U\n  row.names(Z) <- row.names(Y)\n\n#Canonical coefficients - eq. 11.14\n  CC <- B %*% U\n  row.names(CC) <- colnames(X)\n\n#Unadjusted R2\n  R2 <- sum(ev/trace)\n\n########################\n#4. Output\n########################\n\n\n  result <- list(B,       #\"regression_coefficients\"\n                 Yhat,    #\"fitted_values\"\n                 U,       #\"Matric of eigenvectors\"\n                 CC,      #\"Canonical Coefficients\"\n                 trace,   #\"Total variance\"\n                 R2,      #\"R2\"\n                 ev,      #\"Eigenvalues of canonical axes\"\n                 Z,       #\"Site constraints\"\n                 Fmatrix, #\"Site scores\"\n                 S       #\"Covariance_matrix_of_fitted_values\"\n                 )\n\n  names(result) <- c(\"regression_coefficients\", \n                     \"fitted_values\", \n                     \"Matric_of_eigenvectors\", \n                     \"Canonical_Coefficients\",\n                     \"Total_variance\",\n                     \"R2\",\n                     \"Eigenvalues_of_canonical_axes\",\n                     \"Site_constraints\",\n                     \"Site_scores\",\n                     \"Covariance_matrix_of_fitted_values\")\n  result\n  \n}\n\n\n########################\n#Playaround data\n########################\nC = matrix( c(1,2,2,1,3,-1,1,1,1,1,1,1), nrow = 3, ncol = 4, byrow = TRUE)\n\nD = matrix( c(1,2,2,1,3,-1), nrow = 3, ncol = 2, byrow = TRUE)\n\n##################################################################\n#Data from Table 10.5 for chapter 11.1.2 Numerical examples of RDA\n##################################################################\n\nbook_data <- read.csv(\"table10_5.csv\", header = TRUE)\n\nbook_data.m <- as.matrix(book_data)\n\nY <- book_data.m[,2:6]\nX <- book_data.m[,7:9]\n\n\nRDA_output <- RDA(Y,X)\n#summary(RDA_output)\nRDA_output$Eigenvalues_of_canonical_axes\n\n#################\nRDA_output\nRDA_output$Eigenvalues_of_canonical_axes\n\nlibrary(vegan)\nvegan_rda <- rda(Y,X)\nvegan_rda\n",
    "created" : 1447249748856.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3067750341",
    "id" : "A5C01A8F",
    "lastKnownWriteTime" : 1447249761,
    "path" : "~/R/RDA_Legendre/RDA_afterLegendre.R",
    "project_path" : "RDA_afterLegendre.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}